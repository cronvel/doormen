
v0.12.5
-------

Dependencies


v0.12.4
-------

Fix AssertionError message with offending path


v0.12.3
-------

Fix circular require error


v0.12.2
-------

Add missing assertion 'showPathDiff' options


v0.12.1
-------

Fix AssertionError#expectationPath to remove the '.' at the begining of the path, to be compliant with tree-kit's dotPath()


v0.12.0
-------

Maybe breaking -- new .isEqual.getLastPath() returns the dot-path to the part of the object that was not equal
AssertionError now add the offending path to the error message (if any) and also have 'expectationPath' and 'showPathDiff' properties.


v0.11.3
-------

doormen.path() refacto, also the name is deprecated in favor of doormen.subSchema(), new doormen.directSubSchema()


v0.11.2
-------

Dependencies


v0.11.1
-------

Around assertion bug fixed


v0.11.0
-------

BREAKING: doormen.isEqual() options are now in an object, instead of the forever growing argument list, it supports a brand new option: 'unordered', that match when an array have the correct elements but not always in the correct order.


v0.10.21
--------

Dependencies upgraded


v0.10.20
--------

Browser light version


v0.10.19
--------

Add dummy assertion 'onlyKeys', always throwing and suggesting to use 'onlyOwnKeys' instead (because it is common to try 'onlyKeys' first, not remembering that it is not very useful)


v0.10.18
--------

Better 'around' assertion, .isEqual() support epsilon-aware comparison


v0.10.17
--------

Dependencies


v0.10.16
--------

Expect/assertion: set error.from when necessary


v0.10.15
--------

New: defaultFn can be a string to a builtin 'default functions'


v0.10.14
--------

Dependencies


v0.10.13
--------

New -- opaque object: you cannot patch inside it


v0.10.12
--------

Important regression of .isEqual() fixed for nested arrays


v0.10.11
--------

Add fulfill* expectation
to.reject()/to.fulfill() now accepts both functions and promises
expect() don't lose stack trace when dealing with promise anymore


v0.10.10
--------

Revert v0.10.9 which was a breaking change, for function generating default values, use 'defaultFn' instead


v0.10.9
-------

New: when schema.default is a function, that function is executed and its return-value is used as the default


v0.10.8
-------

Fix the Date equality-check bug: isEqual() can rely on .valueOf() for compatible object comparison


v0.10.7
-------

type-checkers now receive the sub-schema as argument #2


v0.10.6
-------

New: 'nullIsValue' and 'nullIsUndefined' flags


v0.10.5
-------

Fix README


v0.10.4
-------

New sanitizer: 'resize' -- resize a string to comply with length, minLength and maxLength filters


v0.10.3
-------

Fixing the validation+patch updating process to exclude any children entries in a patch, when a parent entry is added


v0.10.2
-------

Unique constraint now has noNull/noEmpty parameter


v0.10.1
-------

Upgraded string-kit dependency


v0.10.0
-------

Constraints: condition, switch, unique, compound and extraction


v0.10.x
-------

BREAKING:
* 'if-verify-then' syntax removed, use the contraint 'condition' instead
* 'switch-case' syntax removed, use the contraint 'switch' instead
* 'when' syntax removed, use the contraint 'condition' instead, in conjunction with a forced 'value' in the 'then' schema
* to plural form for the sub-modules and extensions: typeCheckers, sanitizers, filters, constraints: IT AFFECTS ALL CODE DEFINING EXTENSIONS

New:
* constraints, it is used for any combined data validation.
* 'value' set a forced value
